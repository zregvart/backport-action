#!/bin/bash
set -e
set -o pipefail

backport() {
  local branch=$1
  local number=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
  local repository=$(jq --raw-output .repository.clone_url "$GITHUB_EVENT_PATH")
  local backport_branch="backport/${number}-to-${branch}"
  local merge_sha=$(jq --raw-output .pull_request.merge_commit_sha "$GITHUB_EVENT_PATH")

  local workdir=$(mktemp -d)
  git config --global user.email "admin@syndesis.io"
  git config --global user.name "Backport Action"
  git clone --no-tags -b ${branch} ${repository} "${workdir}"
  (cd "${workdir}";
  git checkout -b ${backport_branch};
  git cherry-pick --mainline 1 ${merge_sha};
  git push --set-upstream origin ${backport_branch};
  rm -rf "${workdir}")

  local title=$(jq --raw-output .pull_request.title "$GITHUB_EVENT_PATH")
  local pull_request_title="[Backport ${branch}] ${title}"
  local pull_request_body="Backport of #${number}"
  local pull_request="{\
    \"title\": \"${pull_request_title}\", \
    \"body\": \"${pull_request_body}\", \
    \"head\": \"${backport_branch}\", \
    \"base\": \"${branch}\" \
  }"

  local pulls=$(tmp=$(jq --raw-output .repository.pulls_url "$GITHUB_EVENT_PATH"); echo "${tmp%{*}")

  curl -XPOST -fsSL \
    -H 'Accept: application/vnd.github.v3+json' \
    -H "Authorization: token ${GITHUB_TOKEN}" \
    -H "Content-Type: application/json" \
    -d "${pull_request}" \
    ${pulls}
}

main() {
  local merged=$(jq --raw-output .pull_request.merged "$GITHUB_EVENT_PATH")
  local labels=$(jq --raw-output .pull_request.labels[].name "$GITHUB_EVENT_PATH")

  if [[ "$merged" != "true" ]]; then
    exit 0
  fi

  IFS=$'\n'
  for label in ${labels}; do
    if [[ "${label}" == 'backport '* ]]; then
      local branch=${label#* }
      backport ${branch}
    fi
  done

}

main "$@"
